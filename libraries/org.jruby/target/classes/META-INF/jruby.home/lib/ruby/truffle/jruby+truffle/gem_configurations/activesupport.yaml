---
:global:
  :graal_path: '../../graalvm-jdk1.8.0/bin/java'
:setup:
  :file:
    shims.rb: |
              require 'minitest'
              # mock load_plugins as it loads rubygems
              def Minitest.load_plugins
              end

              require 'active_support/testing/isolation'

              module ActiveSupport
                module Testing
                  module Isolation

                    def run
                      with_info_handler do
                        time_it do
                          capture_exceptions do
                            before_setup; setup; after_setup

                            skip 'isolation not supported'
                          end

                          %w{ before_teardown teardown after_teardown }.each do |hook|
                            capture_exceptions do
                              self.send hook
                            end
                          end
                        end
                      end

                      return self # per contract
                    end
                  end
                end
              end

              # Work around a bug in ActiveSupport whereby it tries to pass an env hash with Symbol keys. This only
              # works on JRuby 1.7. The following will allow the Symbol keys to coerce to Strings.
              class Symbol
                alias :to_str :to_s
              end

    bundler.rb: "module Bundler; def self.setup; end; end"
    # mock method_source gem
    method_source.rb: nil
    exclude_tests.rb:  |
                      {
                          FileStoreTest:            :test_two_classes_autoloading,
                          KernelTest:               [:test_silence_stream,
                                                     :test_quietly,
                                                     :test_capture]
                      }.each do |mod_name, tests|
                        unless Object.const_defined? mod_name
                          warn "#{mod_name} not found"
                          next
                        end
                        mod = Object.const_get mod_name
                        Array(tests).each do |test|
                          begin
                            mod.send :undef_method, test
                            mod.send(:define_method, test) { raise 'test method redefined with this exception since it is crashing tests' }
                          rescue NoMethodError => e
                            p e
                          end
                        end
                      end

  # do not let bundler to install db gem group
  :without:
    - db
:run:
  :require:
    - rubygems
    - shims
    - date
    - bigdecimal
    - pathname
:stored_commands:
  :ci:
    - :setup
    - :test
  :setup:
    - "git clone -b 4-2-stable git@github.com:rails/rails.git"
    - "jruby+truffle --dir rails/activesupport setup"
  :test: "jruby+truffle --dir rails/activesupport run --exclude-pattern 'jdom_engine' --require-pattern 'test/**/**/*_test.rb' -r exclude_tests -- -I test -e 'nil'"


